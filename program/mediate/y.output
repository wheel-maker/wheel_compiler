Terminals unused in grammar

   CR


State 53 conflicts: 4 shift/reduce
State 68 conflicts: 4 shift/reduce
State 69 conflicts: 4 shift/reduce
State 70 conflicts: 4 shift/reduce
State 71 conflicts: 4 shift/reduce
State 72 conflicts: 2 shift/reduce
State 74 conflicts: 1 shift/reduce
State 86 conflicts: 2 shift/reduce
State 87 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: type id LBRACKET paramentList RBRACKET block

    2 paramentList: variable COMMA paramentList
    3             | variable
    4             | /* empty */

    5 $@1: /* empty */

    6 block: LCBRACKET declare sentences $@1 RCBRACKET

    7 declare: declare variable BOUND
    8        | /* empty */

    9 variable: type id
   10         | variable COMMA id

   11 type: INT
   12     | FLOAT
   13     | DOUBLE

   14 id: MARK

   15 sentences: sentence sentences
   16          | sentence

   17 sentence: ifSentence
   18         | whileSentence
   19         | returnSentence
   20         | assignSentence

   21 assignSentence: id ASSIGN expression BOUND

   22 returnSentence: RETURN BOUND
   23               | RETURN expression BOUND

   24 whileSentence: wh block

   25 wh: WHILE LBRACKET boolExpression RBRACKET

   26 ifSentence: IF_T block
   27           | IF_T_E block

   28 IF_T: IF LBRACKET boolExpression RBRACKET

   29 IF_T_E: IF_T block ELSE

   30 $@2: /* empty */

   31 boolExpression: boolExpression AND $@2 boolExpression

   32 $@3: /* empty */

   33 boolExpression: boolExpression OR $@3 boolExpression
   34               | NOT boolExpression
   35               | LBRACKET boolExpression RBRACKET
   36               | expression relop expression
   37               | expression

   38 expression: expression ADD expression
   39           | expression SUB expression
   40           | expression MUL expression
   41           | expression DIV expression
   42           | '-' expression
   43           | LBRACKET expression RBRACKET
   44           | id
   45           | DIGIT
   46           | REAL

   47 relop: COMPARE


Terminals, with rules where they appear

$end (0) 0
'-' (45) 42
error (256)
INT (258) 11
FLOAT (259) 12
DOUBLE (260) 13
AND (261) 31
NOT (262) 34
OR (263) 33
COMPARE (264) 47
DIGIT (265) 45
REAL (266) 46
MARK (267) 14
RETURN (268) 22 23
WHILE (269) 25
IF (270) 28
ELSE (271) 29
LBRACKET (272) 1 25 28 35 43
RBRACKET (273) 1 25 28 35 43
LCBRACKET (274) 6
RCBRACKET (275) 6
BOUND (276) 7 21 22 23
ASSIGN (277) 21
CR (278)
ADD (279) 38
SUB (280) 39
DIV (281) 41
MUL (282) 40
COMMA (283) 2 10


Nonterminals, with rules where they appear

$accept (30)
    on left: 0
program (31)
    on left: 1, on right: 0
paramentList (32)
    on left: 2 3 4, on right: 1 2
block (33)
    on left: 6, on right: 1 24 26 27 29
$@1 (34)
    on left: 5, on right: 6
declare (35)
    on left: 7 8, on right: 6 7
variable (36)
    on left: 9 10, on right: 2 3 7 10
type (37)
    on left: 11 12 13, on right: 1 9
id (38)
    on left: 14, on right: 1 9 10 21 44
sentences (39)
    on left: 15 16, on right: 6 15
sentence (40)
    on left: 17 18 19 20, on right: 15 16
assignSentence (41)
    on left: 21, on right: 20
returnSentence (42)
    on left: 22 23, on right: 19
whileSentence (43)
    on left: 24, on right: 18
wh (44)
    on left: 25, on right: 24
ifSentence (45)
    on left: 26 27, on right: 17
IF_T (46)
    on left: 28, on right: 26 29
IF_T_E (47)
    on left: 29, on right: 27
boolExpression (48)
    on left: 31 33 34 35 36 37, on right: 25 28 31 33 34 35
$@2 (49)
    on left: 30, on right: 31
$@3 (50)
    on left: 32, on right: 33
expression (51)
    on left: 38 39 40 41 42 43 44 45 46, on right: 21 23 36 37 38 39
    40 41 42 43
relop (52)
    on left: 47, on right: 36


state 0

    0 $accept: . program $end

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    DOUBLE  shift, and go to state 3

    program  go to state 4
    type     go to state 5


state 1

   11 type: INT .

    $default  reduce using rule 11 (type)


state 2

   12 type: FLOAT .

    $default  reduce using rule 12 (type)


state 3

   13 type: DOUBLE .

    $default  reduce using rule 13 (type)


state 4

    0 $accept: program . $end

    $end  shift, and go to state 6


state 5

    1 program: type . id LBRACKET paramentList RBRACKET block

    MARK  shift, and go to state 7

    id  go to state 8


state 6

    0 $accept: program $end .

    $default  accept


state 7

   14 id: MARK .

    $default  reduce using rule 14 (id)


state 8

    1 program: type id . LBRACKET paramentList RBRACKET block

    LBRACKET  shift, and go to state 9


state 9

    1 program: type id LBRACKET . paramentList RBRACKET block

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    DOUBLE  shift, and go to state 3

    $default  reduce using rule 4 (paramentList)

    paramentList  go to state 10
    variable      go to state 11
    type          go to state 12


state 10

    1 program: type id LBRACKET paramentList . RBRACKET block

    RBRACKET  shift, and go to state 13


state 11

    2 paramentList: variable . COMMA paramentList
    3             | variable .
   10 variable: variable . COMMA id

    COMMA  shift, and go to state 14

    $default  reduce using rule 3 (paramentList)


state 12

    9 variable: type . id

    MARK  shift, and go to state 7

    id  go to state 15


state 13

    1 program: type id LBRACKET paramentList RBRACKET . block

    LCBRACKET  shift, and go to state 16

    block  go to state 17


state 14

    2 paramentList: variable COMMA . paramentList
   10 variable: variable COMMA . id

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    DOUBLE  shift, and go to state 3
    MARK    shift, and go to state 7

    $default  reduce using rule 4 (paramentList)

    paramentList  go to state 18
    variable      go to state 11
    type          go to state 12
    id            go to state 19


state 15

    9 variable: type id .

    $default  reduce using rule 9 (variable)


state 16

    6 block: LCBRACKET . declare sentences $@1 RCBRACKET

    $default  reduce using rule 8 (declare)

    declare  go to state 20


state 17

    1 program: type id LBRACKET paramentList RBRACKET block .

    $default  reduce using rule 1 (program)


state 18

    2 paramentList: variable COMMA paramentList .

    $default  reduce using rule 2 (paramentList)


state 19

   10 variable: variable COMMA id .

    $default  reduce using rule 10 (variable)


state 20

    6 block: LCBRACKET declare . sentences $@1 RCBRACKET
    7 declare: declare . variable BOUND

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    DOUBLE  shift, and go to state 3
    MARK    shift, and go to state 7
    RETURN  shift, and go to state 21
    WHILE   shift, and go to state 22
    IF      shift, and go to state 23

    variable        go to state 24
    type            go to state 12
    id              go to state 25
    sentences       go to state 26
    sentence        go to state 27
    assignSentence  go to state 28
    returnSentence  go to state 29
    whileSentence   go to state 30
    wh              go to state 31
    ifSentence      go to state 32
    IF_T            go to state 33
    IF_T_E          go to state 34


state 21

   22 returnSentence: RETURN . BOUND
   23               | RETURN . expression BOUND

    DIGIT     shift, and go to state 35
    REAL      shift, and go to state 36
    MARK      shift, and go to state 7
    LBRACKET  shift, and go to state 37
    BOUND     shift, and go to state 38
    '-'       shift, and go to state 39

    id          go to state 40
    expression  go to state 41


state 22

   25 wh: WHILE . LBRACKET boolExpression RBRACKET

    LBRACKET  shift, and go to state 42


state 23

   28 IF_T: IF . LBRACKET boolExpression RBRACKET

    LBRACKET  shift, and go to state 43


state 24

    7 declare: declare variable . BOUND
   10 variable: variable . COMMA id

    BOUND  shift, and go to state 44
    COMMA  shift, and go to state 45


state 25

   21 assignSentence: id . ASSIGN expression BOUND

    ASSIGN  shift, and go to state 46


state 26

    6 block: LCBRACKET declare sentences . $@1 RCBRACKET

    $default  reduce using rule 5 ($@1)

    $@1  go to state 47


state 27

   15 sentences: sentence . sentences
   16          | sentence .

    MARK    shift, and go to state 7
    RETURN  shift, and go to state 21
    WHILE   shift, and go to state 22
    IF      shift, and go to state 23

    $default  reduce using rule 16 (sentences)

    id              go to state 25
    sentences       go to state 48
    sentence        go to state 27
    assignSentence  go to state 28
    returnSentence  go to state 29
    whileSentence   go to state 30
    wh              go to state 31
    ifSentence      go to state 32
    IF_T            go to state 33
    IF_T_E          go to state 34


state 28

   20 sentence: assignSentence .

    $default  reduce using rule 20 (sentence)


state 29

   19 sentence: returnSentence .

    $default  reduce using rule 19 (sentence)


state 30

   18 sentence: whileSentence .

    $default  reduce using rule 18 (sentence)


state 31

   24 whileSentence: wh . block

    LCBRACKET  shift, and go to state 16

    block  go to state 49


state 32

   17 sentence: ifSentence .

    $default  reduce using rule 17 (sentence)


state 33

   26 ifSentence: IF_T . block
   29 IF_T_E: IF_T . block ELSE

    LCBRACKET  shift, and go to state 16

    block  go to state 50


state 34

   27 ifSentence: IF_T_E . block

    LCBRACKET  shift, and go to state 16

    block  go to state 51


state 35

   45 expression: DIGIT .

    $default  reduce using rule 45 (expression)


state 36

   46 expression: REAL .

    $default  reduce using rule 46 (expression)


state 37

   43 expression: LBRACKET . expression RBRACKET

    DIGIT     shift, and go to state 35
    REAL      shift, and go to state 36
    MARK      shift, and go to state 7
    LBRACKET  shift, and go to state 37
    '-'       shift, and go to state 39

    id          go to state 40
    expression  go to state 52


state 38

   22 returnSentence: RETURN BOUND .

    $default  reduce using rule 22 (returnSentence)


state 39

   42 expression: '-' . expression

    DIGIT     shift, and go to state 35
    REAL      shift, and go to state 36
    MARK      shift, and go to state 7
    LBRACKET  shift, and go to state 37
    '-'       shift, and go to state 39

    id          go to state 40
    expression  go to state 53


state 40

   44 expression: id .

    $default  reduce using rule 44 (expression)


state 41

   23 returnSentence: RETURN expression . BOUND
   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression
   41           | expression . DIV expression

    BOUND  shift, and go to state 54
    ADD    shift, and go to state 55
    SUB    shift, and go to state 56
    DIV    shift, and go to state 57
    MUL    shift, and go to state 58


state 42

   25 wh: WHILE LBRACKET . boolExpression RBRACKET

    NOT       shift, and go to state 59
    DIGIT     shift, and go to state 35
    REAL      shift, and go to state 36
    MARK      shift, and go to state 7
    LBRACKET  shift, and go to state 60
    '-'       shift, and go to state 39

    id              go to state 40
    boolExpression  go to state 61
    expression      go to state 62


state 43

   28 IF_T: IF LBRACKET . boolExpression RBRACKET

    NOT       shift, and go to state 59
    DIGIT     shift, and go to state 35
    REAL      shift, and go to state 36
    MARK      shift, and go to state 7
    LBRACKET  shift, and go to state 60
    '-'       shift, and go to state 39

    id              go to state 40
    boolExpression  go to state 63
    expression      go to state 62


state 44

    7 declare: declare variable BOUND .

    $default  reduce using rule 7 (declare)


state 45

   10 variable: variable COMMA . id

    MARK  shift, and go to state 7

    id  go to state 19


state 46

   21 assignSentence: id ASSIGN . expression BOUND

    DIGIT     shift, and go to state 35
    REAL      shift, and go to state 36
    MARK      shift, and go to state 7
    LBRACKET  shift, and go to state 37
    '-'       shift, and go to state 39

    id          go to state 40
    expression  go to state 64


state 47

    6 block: LCBRACKET declare sentences $@1 . RCBRACKET

    RCBRACKET  shift, and go to state 65


state 48

   15 sentences: sentence sentences .

    $default  reduce using rule 15 (sentences)


state 49

   24 whileSentence: wh block .

    $default  reduce using rule 24 (whileSentence)


state 50

   26 ifSentence: IF_T block .
   29 IF_T_E: IF_T block . ELSE

    ELSE  shift, and go to state 66

    $default  reduce using rule 26 (ifSentence)


state 51

   27 ifSentence: IF_T_E block .

    $default  reduce using rule 27 (ifSentence)


state 52

   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression
   41           | expression . DIV expression
   43           | LBRACKET expression . RBRACKET

    RBRACKET  shift, and go to state 67
    ADD       shift, and go to state 55
    SUB       shift, and go to state 56
    DIV       shift, and go to state 57
    MUL       shift, and go to state 58


state 53

   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression
   41           | expression . DIV expression
   42           | '-' expression .

    ADD  shift, and go to state 55
    SUB  shift, and go to state 56
    DIV  shift, and go to state 57
    MUL  shift, and go to state 58

    ADD       [reduce using rule 42 (expression)]
    SUB       [reduce using rule 42 (expression)]
    DIV       [reduce using rule 42 (expression)]
    MUL       [reduce using rule 42 (expression)]
    $default  reduce using rule 42 (expression)


state 54

   23 returnSentence: RETURN expression BOUND .

    $default  reduce using rule 23 (returnSentence)


state 55

   38 expression: expression ADD . expression

    DIGIT     shift, and go to state 35
    REAL      shift, and go to state 36
    MARK      shift, and go to state 7
    LBRACKET  shift, and go to state 37
    '-'       shift, and go to state 39

    id          go to state 40
    expression  go to state 68


state 56

   39 expression: expression SUB . expression

    DIGIT     shift, and go to state 35
    REAL      shift, and go to state 36
    MARK      shift, and go to state 7
    LBRACKET  shift, and go to state 37
    '-'       shift, and go to state 39

    id          go to state 40
    expression  go to state 69


state 57

   41 expression: expression DIV . expression

    DIGIT     shift, and go to state 35
    REAL      shift, and go to state 36
    MARK      shift, and go to state 7
    LBRACKET  shift, and go to state 37
    '-'       shift, and go to state 39

    id          go to state 40
    expression  go to state 70


state 58

   40 expression: expression MUL . expression

    DIGIT     shift, and go to state 35
    REAL      shift, and go to state 36
    MARK      shift, and go to state 7
    LBRACKET  shift, and go to state 37
    '-'       shift, and go to state 39

    id          go to state 40
    expression  go to state 71


state 59

   34 boolExpression: NOT . boolExpression

    NOT       shift, and go to state 59
    DIGIT     shift, and go to state 35
    REAL      shift, and go to state 36
    MARK      shift, and go to state 7
    LBRACKET  shift, and go to state 60
    '-'       shift, and go to state 39

    id              go to state 40
    boolExpression  go to state 72
    expression      go to state 62


state 60

   35 boolExpression: LBRACKET . boolExpression RBRACKET
   43 expression: LBRACKET . expression RBRACKET

    NOT       shift, and go to state 59
    DIGIT     shift, and go to state 35
    REAL      shift, and go to state 36
    MARK      shift, and go to state 7
    LBRACKET  shift, and go to state 60
    '-'       shift, and go to state 39

    id              go to state 40
    boolExpression  go to state 73
    expression      go to state 74


state 61

   25 wh: WHILE LBRACKET boolExpression . RBRACKET
   31 boolExpression: boolExpression . AND $@2 boolExpression
   33               | boolExpression . OR $@3 boolExpression

    AND       shift, and go to state 75
    OR        shift, and go to state 76
    RBRACKET  shift, and go to state 77


state 62

   36 boolExpression: expression . relop expression
   37               | expression .
   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression
   41           | expression . DIV expression

    COMPARE  shift, and go to state 78
    ADD      shift, and go to state 55
    SUB      shift, and go to state 56
    DIV      shift, and go to state 57
    MUL      shift, and go to state 58

    $default  reduce using rule 37 (boolExpression)

    relop  go to state 79


state 63

   28 IF_T: IF LBRACKET boolExpression . RBRACKET
   31 boolExpression: boolExpression . AND $@2 boolExpression
   33               | boolExpression . OR $@3 boolExpression

    AND       shift, and go to state 75
    OR        shift, and go to state 76
    RBRACKET  shift, and go to state 80


state 64

   21 assignSentence: id ASSIGN expression . BOUND
   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression
   41           | expression . DIV expression

    BOUND  shift, and go to state 81
    ADD    shift, and go to state 55
    SUB    shift, and go to state 56
    DIV    shift, and go to state 57
    MUL    shift, and go to state 58


state 65

    6 block: LCBRACKET declare sentences $@1 RCBRACKET .

    $default  reduce using rule 6 (block)


state 66

   29 IF_T_E: IF_T block ELSE .

    $default  reduce using rule 29 (IF_T_E)


state 67

   43 expression: LBRACKET expression RBRACKET .

    $default  reduce using rule 43 (expression)


state 68

   38 expression: expression . ADD expression
   38           | expression ADD expression .
   39           | expression . SUB expression
   40           | expression . MUL expression
   41           | expression . DIV expression

    ADD  shift, and go to state 55
    SUB  shift, and go to state 56
    DIV  shift, and go to state 57
    MUL  shift, and go to state 58

    ADD       [reduce using rule 38 (expression)]
    SUB       [reduce using rule 38 (expression)]
    DIV       [reduce using rule 38 (expression)]
    MUL       [reduce using rule 38 (expression)]
    $default  reduce using rule 38 (expression)


state 69

   38 expression: expression . ADD expression
   39           | expression . SUB expression
   39           | expression SUB expression .
   40           | expression . MUL expression
   41           | expression . DIV expression

    ADD  shift, and go to state 55
    SUB  shift, and go to state 56
    DIV  shift, and go to state 57
    MUL  shift, and go to state 58

    ADD       [reduce using rule 39 (expression)]
    SUB       [reduce using rule 39 (expression)]
    DIV       [reduce using rule 39 (expression)]
    MUL       [reduce using rule 39 (expression)]
    $default  reduce using rule 39 (expression)


state 70

   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression
   41           | expression . DIV expression
   41           | expression DIV expression .

    ADD  shift, and go to state 55
    SUB  shift, and go to state 56
    DIV  shift, and go to state 57
    MUL  shift, and go to state 58

    ADD       [reduce using rule 41 (expression)]
    SUB       [reduce using rule 41 (expression)]
    DIV       [reduce using rule 41 (expression)]
    MUL       [reduce using rule 41 (expression)]
    $default  reduce using rule 41 (expression)


state 71

   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression
   40           | expression MUL expression .
   41           | expression . DIV expression

    ADD  shift, and go to state 55
    SUB  shift, and go to state 56
    DIV  shift, and go to state 57
    MUL  shift, and go to state 58

    ADD       [reduce using rule 40 (expression)]
    SUB       [reduce using rule 40 (expression)]
    DIV       [reduce using rule 40 (expression)]
    MUL       [reduce using rule 40 (expression)]
    $default  reduce using rule 40 (expression)


state 72

   31 boolExpression: boolExpression . AND $@2 boolExpression
   33               | boolExpression . OR $@3 boolExpression
   34               | NOT boolExpression .

    AND  shift, and go to state 75
    OR   shift, and go to state 76

    AND       [reduce using rule 34 (boolExpression)]
    OR        [reduce using rule 34 (boolExpression)]
    $default  reduce using rule 34 (boolExpression)


state 73

   31 boolExpression: boolExpression . AND $@2 boolExpression
   33               | boolExpression . OR $@3 boolExpression
   35               | LBRACKET boolExpression . RBRACKET

    AND       shift, and go to state 75
    OR        shift, and go to state 76
    RBRACKET  shift, and go to state 82


state 74

   36 boolExpression: expression . relop expression
   37               | expression .
   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression
   41           | expression . DIV expression
   43           | LBRACKET expression . RBRACKET

    COMPARE   shift, and go to state 78
    RBRACKET  shift, and go to state 67
    ADD       shift, and go to state 55
    SUB       shift, and go to state 56
    DIV       shift, and go to state 57
    MUL       shift, and go to state 58

    RBRACKET  [reduce using rule 37 (boolExpression)]
    $default  reduce using rule 37 (boolExpression)

    relop  go to state 79


state 75

   31 boolExpression: boolExpression AND . $@2 boolExpression

    $default  reduce using rule 30 ($@2)

    $@2  go to state 83


state 76

   33 boolExpression: boolExpression OR . $@3 boolExpression

    $default  reduce using rule 32 ($@3)

    $@3  go to state 84


state 77

   25 wh: WHILE LBRACKET boolExpression RBRACKET .

    $default  reduce using rule 25 (wh)


state 78

   47 relop: COMPARE .

    $default  reduce using rule 47 (relop)


state 79

   36 boolExpression: expression relop . expression

    DIGIT     shift, and go to state 35
    REAL      shift, and go to state 36
    MARK      shift, and go to state 7
    LBRACKET  shift, and go to state 37
    '-'       shift, and go to state 39

    id          go to state 40
    expression  go to state 85


state 80

   28 IF_T: IF LBRACKET boolExpression RBRACKET .

    $default  reduce using rule 28 (IF_T)


state 81

   21 assignSentence: id ASSIGN expression BOUND .

    $default  reduce using rule 21 (assignSentence)


state 82

   35 boolExpression: LBRACKET boolExpression RBRACKET .

    $default  reduce using rule 35 (boolExpression)


state 83

   31 boolExpression: boolExpression AND $@2 . boolExpression

    NOT       shift, and go to state 59
    DIGIT     shift, and go to state 35
    REAL      shift, and go to state 36
    MARK      shift, and go to state 7
    LBRACKET  shift, and go to state 60
    '-'       shift, and go to state 39

    id              go to state 40
    boolExpression  go to state 86
    expression      go to state 62


state 84

   33 boolExpression: boolExpression OR $@3 . boolExpression

    NOT       shift, and go to state 59
    DIGIT     shift, and go to state 35
    REAL      shift, and go to state 36
    MARK      shift, and go to state 7
    LBRACKET  shift, and go to state 60
    '-'       shift, and go to state 39

    id              go to state 40
    boolExpression  go to state 87
    expression      go to state 62


state 85

   36 boolExpression: expression relop expression .
   38 expression: expression . ADD expression
   39           | expression . SUB expression
   40           | expression . MUL expression
   41           | expression . DIV expression

    ADD  shift, and go to state 55
    SUB  shift, and go to state 56
    DIV  shift, and go to state 57
    MUL  shift, and go to state 58

    $default  reduce using rule 36 (boolExpression)


state 86

   31 boolExpression: boolExpression . AND $@2 boolExpression
   31               | boolExpression AND $@2 boolExpression .
   33               | boolExpression . OR $@3 boolExpression

    AND  shift, and go to state 75
    OR   shift, and go to state 76

    AND       [reduce using rule 31 (boolExpression)]
    OR        [reduce using rule 31 (boolExpression)]
    $default  reduce using rule 31 (boolExpression)


state 87

   31 boolExpression: boolExpression . AND $@2 boolExpression
   33               | boolExpression . OR $@3 boolExpression
   33               | boolExpression OR $@3 boolExpression .

    AND  shift, and go to state 75
    OR   shift, and go to state 76

    AND       [reduce using rule 33 (boolExpression)]
    OR        [reduce using rule 33 (boolExpression)]
    $default  reduce using rule 33 (boolExpression)
